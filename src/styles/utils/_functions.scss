/**
* Calculates the rem.
* @param {Size}  $size
* @param {Size}  $theme-font-size
* @return {Size}
*/
@function calculate-rem($size, $font-size: map-get($theme-font-sizes, 'base')) {
    $remSize: $size / $font-size;

    @return #{$remSize}rem;
}

/* Slightly lighten a color
* @param {Color} $color - color to tint
* @param {Number} $percentage - percentage of `$color` in returned color
* @return {Color}
*/
@function tint($color, $percentage) {
    @return mix(white, $color, $percentage);
}

/* Slightly darken a color
* @param {Color} $color - color to shade
* @param {Number} $percentage - percentage of `$color` in returned color
* @return {Color}
*/
@function shade($color, $percentage) {
    @return mix(black, $color, $percentage);
}

/**
* Get color.
* @param {Color}  $color
* @param {String}  $tone
* @return {Color}  $color
*/
@function color($color, $tone: 500) {
    @if not map-has-key($theme-colors, $color) {
        @error "Invalid color specified! #{$color} doesn't exist. Choose one of #{map-keys($theme-colors)}";
    }

    @return var(--color-#{$color}-#{$tone});
}

@function size($size: 'base') {
    @if not map-has-key($theme-font-sizes, $size) {
        @error "Invalid size specified! #{$size} doesn't exist. Choose one of #{map-keys($theme-font-sizes)}";
    }

    @return calculate-rem(map-get($theme-font-sizes, $size));
}

@function weight($weight: 'regular') {
    @if not map-has-key($theme-font-weight, $weight) {
        @error "Invalid size specified! #{$weight} doesn't exist. Choose one of #{map-keys($theme-font-weight)}";
    }

    @return map-get($theme-font-weight, $weight);
}
